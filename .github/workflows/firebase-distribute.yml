name: Distribute APK via Fastlane

on:
  push:
    branches:
      - main # or 'master' or any branch you want

permissions:
  contents: write

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: Set up Flutter 3.29.1
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.1"
          channel: "stable"

      - name: üì¶ Install dependencies
        run: flutter pub get

      - name: ü§ñ Semantic Version Bump & Commit (extended)
        id: semver
        run: |
          echo "üîç Checking last commit..."
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"

          CURRENT_VERSION_LINE=$(grep '^version:' pubspec.yaml)
          VERSION_NAME=$(echo "$CURRENT_VERSION_LINE" | cut -d ':' -f2 | cut -d '+' -f1 | xargs)
          VERSION_CODE=$(echo "$CURRENT_VERSION_LINE" | cut -d '+' -f2 | xargs)

          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_NAME"

          VERSION_BUMPED=false

          if echo "$COMMIT_MSG" | grep -q "BREAKING CHANGE"; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
            VERSION_BUMPED=true
          elif echo "$COMMIT_MSG" | grep -qE "^feat"; then
            MINOR=$((MINOR + 1))
            PATCH=0
            VERSION_BUMPED=true
          elif echo "$COMMIT_MSG" | grep -qE "^(fix|perf|refactor|chore)"; then
            PATCH=$((PATCH + 1))
            VERSION_BUMPED=true
          else
            echo "üü° No version bump keyword found. Keeping version the same."
          fi

          VERSION_CODE=$((VERSION_CODE + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH+$VERSION_CODE"

          if [ "$VERSION_BUMPED" = true ]; then
            echo "üì¶ Updating version to: $NEW_VERSION"
            sed -i "s/^version:.*/version: $NEW_VERSION/" pubspec.yaml

            echo "üìù Committing version bump to GitHub..."
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add pubspec.yaml
            git commit -m "chore(release): $NEW_VERSION"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "‚úÖ Version unchanged ‚Äî skipping commit."
          fi

      - name: üõ†Ô∏è Run code generation (Freezed, JSON Serializable, etc.)
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: üîß Set up Ruby for Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"

      - name: üß™ Install Fastlane + Firebase plugin
        run: |
          cd android
          gem install fastlane
          fastlane add_plugin firebase_app_distribution

      - name: üöÄ Build and Upload APK to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          cd android
          fastlane beta
