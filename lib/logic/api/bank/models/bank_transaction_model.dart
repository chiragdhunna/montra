import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:montra/logic/api/bank/models/bank_model.dart';
import 'package:montra/logic/api/expense/models/expense_model.dart';
import 'package:montra/logic/api/expense/models/expenses_model.dart';
import 'package:montra/logic/api/income/models/income_model.dart';
import 'package:montra/logic/api/income/models/incomes_model.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'bank_transaction_model.freezed.dart';
// optional: Since our BankTransactionModel class is serializable, we must add this line.
// But if BankTransactionModel was not serializable, we could skip it.
part 'bank_transaction_model.g.dart';

@freezed
abstract class BankTransactionModel with _$BankTransactionModel {
  const factory BankTransactionModel({
    required List<IncomeModel> incomes,
    required List<ExpenseModel> expenses,
  }) = _BankTransactionModel;

  factory BankTransactionModel.fromJson(Map<String, dynamic> json) =>
      _$BankTransactionModelFromJson(json);
}
